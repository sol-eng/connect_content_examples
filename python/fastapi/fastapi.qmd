# FastAPI {.unnumbered}

## Prerequisites

* `fastapi` Python package installed
* `rsconnect-python` Python package installed
* Empty working directory

## Create Content {.numbered}

### 1. Create `app.py` file

````markdown
from fastapi import FastAPI

app = FastAPI()


@app.get("/")
async def root():
    return {"message": "Hello World"}

````

### 2. Create `requirements.txt` file

(Only contains `fastapi` package.)

```markdown
fastapi

```

### 3. Verify content runs locally

```markdown
$ uvicorn app:app --reload
```
This will start up a server, usually at the local address below.
```markdown
INFO:     Uvicorn running on http://127.0.0.1:8000 (Press CTRL+C to quit)
```
Follow that link and you should see the following JSON in the browser.
```markdown
{"message":"Hello World"}
```

## Register Connect Server {.numbered}

### 1. Get API key from Connect server
![](../streamlit/images/1_streamlit_connect_api_key.png){fig-align="left" width=100%}


### 2. Register API key and server with `rsconnect-python`

```markdown
rsconnect add --api-key <API_KEY> \
--server <CONNECT_SERVER_URL> \
--name <ALIAS>
```

## Publish Content {.numbered}

### 1. Deploy content to Connect server

```markdown
$ rsconnect deploy fastapi . --title "FastAPI Example" -n <ALIAS>
```
You should see the following after a successful deployment.

```markdown
Launching FastAPI application...
Deployment completed successfully.
         Dashboard content URL: http://colorado.rstudio.com/connect/#/apps/9ae4830f-f86d-4fc6-b44f-bc0278b98553
         Direct content URL: http://colorado.rstudio.com/content/9ae4830f-f86d-4fc6-b44f-bc0278b98553/
  ```

### 2. Verify that API is accessible on Connect

In terminal window:

```markdown
$ curl -X 'GET' http://colorado.rstudio.com/content/9ae4830f-f86d-4fc6-b44f-bc0278b98553/ \
-H "Authorization: Key <API_KEY>"
```

Should return:
```markdown
{"message":"Hello World"}
```
