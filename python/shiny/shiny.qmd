# Shiny (Python) {.unnumbered}

## Prerequisites

* `shiny` Python package installed
* `rsconnect-python` Python package installed
* Empty working directory

## Create Content {.numbered}

### 1. Create `app.py` file in text editor.

````markdown
from shiny import App, render, ui

app_ui = ui.page_fluid(
    ui.input_slider("n", "N", 0, 100, 20),
    ui.output_text_verbatim("txt"),
)

def server(input, output, session):
    @output
    @render.text
    def txt():
        return f"n*2 is {input.n() * 2}"

app = App(app_ui, server)

````

### 2. Create `requirements.txt` file

(Only contains `shiny` package.)

```markdown
shiny

```

## Register Connect Server {.numbered}

### 1. Get API key from Connect server
![](../streamlit/images/1_streamlit_connect_api_key.png){fig-align="left" width=100%}

### 2. Register API key and server with `rsconnect-python`

```markdown
rsconnect add --api-key <API_KEY> \
--server <CONNECT_SERVER_URL> \
--name <ALIAS>
```

## Publish Content {.numbered}

### 1. Deploy content to Connect server

```markdown
rsconnect deploy shiny . --title "Shiny Python Example" -n <ALIAS>
```
You should see the following after a successful deployment.

```markdown
Launching Python Shiny application...
Deployment completed successfully.
         Dashboard content URL: http://colorado.rstudio.com/connect/#/apps/65db651f-937d-4e50-b299-de14893d63b4
         Direct content URL: http://colorado.rstudio.com/content/65db651f-937d-4e50-b299-de14893d63b4/
  ```

### 2. Verify that API is accessible on Connect

Go to _Dashboard content URL_ listed in Deployment pane.  You should see the following.

![](images/1_connect_shiny_python.png){fig-align="left" width=80%}
