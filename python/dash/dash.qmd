# Dash {.unnumbered}

## Prerequisites

* `dash` Python package installed
* `plotly` Python package installed
* Empty working directory

## Create Content {.numbered}

### 1. Create `app.py` file

````markdown
import dash
from dash import dcc
from dash import html
from dash.dependencies import Input, Output

app = dash.Dash('Dash Example')

text_style = dict(color='#444', fontFamily='sans-serif', fontWeight=300)
plotly_figure = dict(data=[dict(x=[1,2,3], y=[2,4,8])])

app.layout = html.Div([ 
        html.H2('Dash Example', style=text_style),
        html.P('Enter a Plotly trace type into the text box, such as histogram, bar, or scatter.', style=text_style),
        dcc.Input(id='text1', placeholder='scatter', value='scatter'),
        dcc.Graph(id='plot1', figure=plotly_figure),
    ])

@app.callback(Output('plot1', 'figure'), [Input('text1', 'value')] )
def text_callback( text_input ):
    return {'data': [dict(x=[1,2,3], y=[2,4,8], type=text_input)]}

if __name__=='__main__':
    app.run_server()
````

### 2. Create `requirements.txt` file

```markdown
dash
plotly

```

### 3. Verify content runs locally

```markdown
python3 app.py
```

You should see:

```markdown
Dash is running on http://127.0.0.1:8050/

 * Serving Flask app 'Dash Hello World'
 * Debug mode: off
WARNING: This is a development server. 
Do not use it in a production deployment. 
Use a production WSGI server instead.
 * Running on http://127.0.0.1:8050
Press CTRL+C to quit

```
## Register Connect Server {.numbered}

### 1. Get API key from Connect server
![](../streamlit/images/1_streamlit_connect_api_key.png){fig-align="left" width=100%}


### 2. Register API key and server with `rsconnect-python`

```markdown
rsconnect add --api-key <API_KEY> \
--server <CONNECT_SERVER_URL> \
--name <ALIAS>
```

## Publish Content {.numbered}

### 1. Deploy content to Connect server

```markdown
rsconnect deploy dash . \
--title "Dash Example" \
-n <ALIAS>
```
You should see the following after a successful deployment.

```markdown
Launching Dash application...Deployment completed successfully.
Dashboard content URL: https://colorado.rstudio.com/rsc/connect/#/apps/dd3114d2-c845-475a-971a-738d4f3ea5e7
Direct content URL: https://colorado.rstudio.com/rsc/content/dd3114d2-c845-475a-971a-738d4f3ea5e7/
  ```

### 2. Verify that API is accessible on Connect

Go to _Direct content URL_ listed in Deployment pane.  You should see the following.

![](images/1_.png){fig-align="left" width=100%}
